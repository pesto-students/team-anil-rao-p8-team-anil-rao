{"ast":null,"code":"import { MixedType } from './MixedType';\nimport { createValidator, createValidatorAsync, checkRequired, isEmpty } from './utils';\nexport class ObjectType extends MixedType {\n  constructor(errorMessage) {\n    super('object');\n    super.pushRule({\n      onValid: v => typeof v === 'object',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n  check() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n    let data = arguments.length > 1 ? arguments[1] : undefined;\n    let fieldName = arguments.length > 2 ? arguments[2] : undefined;\n    const check = (value, data, type) => {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return {\n          hasError: true,\n          errorMessage: type.requiredMessage\n        };\n      }\n      if (type.objectTypeSchemaSpec && typeof value === 'object') {\n        const checkResultObject = {};\n        let hasError = false;\n        Object.entries(type.objectTypeSchemaSpec).forEach(_ref => {\n          let [k, v] = _ref;\n          const checkResult = check(value[k], value, v);\n          if (checkResult === null || checkResult === void 0 ? void 0 : checkResult.hasError) {\n            hasError = true;\n          }\n          checkResultObject[k] = checkResult;\n        });\n        return {\n          hasError,\n          object: checkResultObject\n        };\n      }\n      const validator = createValidator(data, fieldName);\n      const checkStatus = validator(value, type.priorityRules);\n      if (checkStatus) {\n        return checkStatus;\n      }\n      if (!type.required && isEmpty(value)) {\n        return {\n          hasError: false\n        };\n      }\n      return validator(value, type.rules) || {\n        hasError: false\n      };\n    };\n    return check(value, data, this);\n  }\n  checkAsync() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n    let data = arguments.length > 1 ? arguments[1] : undefined;\n    let fieldName = arguments.length > 2 ? arguments[2] : undefined;\n    const check = (value, data, type) => {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return Promise.resolve({\n          hasError: true,\n          errorMessage: this.requiredMessage\n        });\n      }\n      const validator = createValidatorAsync(data, fieldName);\n      return new Promise(resolve => {\n        if (type.objectTypeSchemaSpec && typeof value === 'object') {\n          const checkResult = {};\n          const checkAll = [];\n          const keys = [];\n          Object.entries(type.objectTypeSchemaSpec).forEach(_ref2 => {\n            let [k, v] = _ref2;\n            checkAll.push(check(value[k], value, v));\n            keys.push(k);\n          });\n          return Promise.all(checkAll).then(values => {\n            values.forEach((v, index) => {\n              checkResult[keys[index]] = v;\n            });\n            resolve({\n              object: checkResult\n            });\n          });\n        }\n        return validator(value, type.priorityRules).then(checkStatus => {\n          if (checkStatus) {\n            resolve(checkStatus);\n          }\n        }).then(() => {\n          if (!type.required && isEmpty(value)) {\n            resolve({\n              hasError: false\n            });\n          }\n        }).then(() => validator(value, type.rules)).then(checkStatus => {\n          if (checkStatus) {\n            resolve(checkStatus);\n          }\n          resolve({\n            hasError: false\n          });\n        });\n      });\n    };\n    return check(value, data, this);\n  }\n  /**\n   * @example\n   * ObjectType().shape({\n   *  name: StringType(),\n   *  age: NumberType()\n   * })\n   */\n  shape(fields) {\n    this.objectTypeSchemaSpec = fields;\n    return this;\n  }\n}\nexport default function getObjectType(errorMessage) {\n  return new ObjectType(errorMessage);\n}","map":{"version":3,"names":["MixedType","createValidator","createValidatorAsync","checkRequired","isEmpty","ObjectType","constructor","errorMessage","pushRule","onValid","v","locale","type","check","value","arguments","length","undefined","data","fieldName","required","trim","emptyAllowed","hasError","requiredMessage","objectTypeSchemaSpec","checkResultObject","Object","entries","forEach","_ref","k","checkResult","object","validator","checkStatus","priorityRules","rules","checkAsync","Promise","resolve","checkAll","keys","_ref2","push","all","then","values","index","shape","fields","getObjectType"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/online-streaming-service-frontend/node_modules/schema-typed/src/ObjectType.ts"],"sourcesContent":["import { MixedType } from './MixedType';\nimport { createValidator, createValidatorAsync, checkRequired, isEmpty } from './utils';\nimport { PlainObject, SchemaDeclaration, CheckResult, ErrorMessageType } from './types';\nimport { ObjectTypeLocale } from './locales';\n\nexport class ObjectType<DataType = any, E = ErrorMessageType> extends MixedType<\n  PlainObject,\n  DataType,\n  E,\n  ObjectTypeLocale\n> {\n  objectTypeSchemaSpec: SchemaDeclaration<DataType, E>;\n  constructor(errorMessage?: E | string) {\n    super('object');\n    super.pushRule({\n      onValid: v => typeof v === 'object',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n\n  check(value: PlainObject = this.value, data?: DataType, fieldName?: string | string[]) {\n    const check = (value: any, data: any, type: any) => {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return { hasError: true, errorMessage: type.requiredMessage };\n      }\n\n      if (type.objectTypeSchemaSpec && typeof value === 'object') {\n        const checkResultObject: any = {};\n        let hasError = false;\n        Object.entries(type.objectTypeSchemaSpec).forEach(([k, v]) => {\n          const checkResult = check(value[k], value, v);\n          if (checkResult?.hasError) {\n            hasError = true;\n          }\n          checkResultObject[k] = checkResult;\n        });\n\n        return { hasError, object: checkResultObject };\n      }\n\n      const validator = createValidator<PlainObject, DataType, E | string>(data, fieldName);\n      const checkStatus = validator(value, type.priorityRules);\n\n      if (checkStatus) {\n        return checkStatus;\n      }\n\n      if (!type.required && isEmpty(value)) {\n        return { hasError: false };\n      }\n\n      return validator(value, type.rules) || { hasError: false };\n    };\n\n    return check(value, data, this) as CheckResult<E | string, DataType>;\n  }\n\n  checkAsync(value: PlainObject = this.value, data?: DataType, fieldName?: string | string[]) {\n    const check = (value: any, data: any, type: any) => {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return Promise.resolve({ hasError: true, errorMessage: this.requiredMessage });\n      }\n\n      const validator = createValidatorAsync<PlainObject, DataType, E | string>(data, fieldName);\n\n      return new Promise(resolve => {\n        if (type.objectTypeSchemaSpec && typeof value === 'object') {\n          const checkResult: any = {};\n          const checkAll: Promise<unknown>[] = [];\n          const keys: string[] = [];\n          Object.entries(type.objectTypeSchemaSpec).forEach(([k, v]) => {\n            checkAll.push(check(value[k], value, v));\n            keys.push(k);\n          });\n\n          return Promise.all(checkAll).then(values => {\n            values.forEach((v, index) => {\n              checkResult[keys[index]] = v;\n            });\n\n            resolve({ object: checkResult });\n          });\n        }\n\n        return validator(value, type.priorityRules)\n          .then((checkStatus: CheckResult<E | string, DataType> | void | null) => {\n            if (checkStatus) {\n              resolve(checkStatus);\n            }\n          })\n          .then(() => {\n            if (!type.required && isEmpty(value)) {\n              resolve({ hasError: false });\n            }\n          })\n          .then(() => validator(value, type.rules))\n          .then((checkStatus: CheckResult<E | string, DataType> | void | null) => {\n            if (checkStatus) {\n              resolve(checkStatus);\n            }\n            resolve({ hasError: false });\n          });\n      });\n    };\n\n    return check(value, data, this) as Promise<CheckResult<E | string, DataType>>;\n  }\n\n  /**\n   * @example\n   * ObjectType().shape({\n   *  name: StringType(),\n   *  age: NumberType()\n   * })\n   */\n  shape(fields: SchemaDeclaration<DataType, E>) {\n    this.objectTypeSchemaSpec = fields;\n    return this;\n  }\n}\n\nexport default function getObjectType<DataType = any, E = string>(errorMessage?: E) {\n  return new ObjectType<DataType, E>(errorMessage);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
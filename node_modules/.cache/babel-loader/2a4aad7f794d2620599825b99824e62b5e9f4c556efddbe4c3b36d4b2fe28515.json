{"ast":null,"code":"import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors {\n  /**\n   * @inheritDoc\n   */\n  static __initStatic() {\n    this.id = 'LinkedErrors';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  __init() {\n    this.name = LinkedErrors.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setupOnce() {\n    const client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n}\nLinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(parser, key, limit, event, hint) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException, key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(parser, limit, error, key) {\n  let stack = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\nexport { LinkedErrors, _handler, _walkErrorTree };","map":{"version":3,"names":["DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","__initStatic","id","__init","name","constructor","options","arguments","length","undefined","prototype","call","_key","key","_limit","limit","setupOnce","client","getCurrentHub","getClient","addGlobalEventProcessor","event","hint","self","getIntegration","_handler","getOptions","stackParser","parser","exception","values","isInstanceOf","originalException","Error","linkedErrors","_walkErrorTree","error","stack","exceptionFromError"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/src/integrations/linkederrors.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport type { Event, EventHint, Exception, ExtendedError, Integration, StackParser } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { exceptionFromError } from '../eventbuilder';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\ninterface LinkedErrorsOptions {\n  key: string;\n  limit: number;\n}\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: LinkedErrorsOptions['key'];\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: LinkedErrorsOptions['limit'];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: Partial<LinkedErrorsOptions> = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    const client = getCurrentHub().getClient<BrowserClient>();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n}\n\n/**\n * @inheritDoc\n */\nexport function _handler(\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): Event | null {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException as ExtendedError, key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nexport function _walkErrorTree(\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  stack: Exception[] = [],\n): Exception[] {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n"],"mappings":";;;AAOA,MAAAA,WAAA;AACA,MAAAC,aAAA;;AAOA;AACA,MAAAC,YAAA;EACA;AACA;AACA;EACA,OAAAC,aAAA;IAAA,KAAAC,EAAA;EAAA;;EAEA;AACA;AACA;EACAC,OAAA;IAAA,KAAAC,IAAA,GAAAJ,YAAA,CAAAE,EAAA;EAAA;;EAEA;AACA;AACA;;EAGA;AACA;AACA;;EAGA;AACA;AACA;EACAG,YAAA;IAAA,IAAAC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;IAAAP,YAAA,CAAAU,SAAA,CAAAP,MAAA,CAAAQ,IAAA;IACA,KAAAC,IAAA,GAAAN,OAAA,CAAAO,GAAA,IAAAf,WAAA;IACA,KAAAgB,MAAA,GAAAR,OAAA,CAAAS,KAAA,IAAAhB,aAAA;EACA;;EAEA;AACA;AACA;EACAiB,UAAA;IACA,MAAAC,MAAA,GAAAC,aAAA,GAAAC,SAAA;IACA,KAAAF,MAAA;MACA;IACA;IACAG,uBAAA,EAAAC,KAAA,EAAAC,IAAA;MACA,MAAAC,IAAA,GAAAL,aAAA,GAAAM,cAAA,CAAAxB,YAAA;MACA,OAAAuB,IAAA,GAAAE,QAAA,CAAAR,MAAA,CAAAS,UAAA,GAAAC,WAAA,EAAAJ,IAAA,CAAAX,IAAA,EAAAW,IAAA,CAAAT,MAAA,EAAAO,KAAA,EAAAC,IAAA,IAAAD,KAAA;IACA;EACA;AACA;AAAArB,YAAA,CAAAC,YAAA;;AAEA;AACA;AACA;AACA,SAAAwB,SACAG,MAAA,EACAf,GAAA,EACAE,KAAA,EACAM,KAAA,EACAC,IAAA,EACA;EACA,KAAAD,KAAA,CAAAQ,SAAA,KAAAR,KAAA,CAAAQ,SAAA,CAAAC,MAAA,KAAAR,IAAA,KAAAS,YAAA,CAAAT,IAAA,CAAAU,iBAAA,EAAAC,KAAA;IACA,OAAAZ,KAAA;EACA;EACA,MAAAa,YAAA,GAAAC,cAAA,CAAAP,MAAA,EAAAb,KAAA,EAAAO,IAAA,CAAAU,iBAAA,EAAAnB,GAAA;EACAQ,KAAA,CAAAQ,SAAA,CAAAC,MAAA,OAAAI,YAAA,KAAAb,KAAA,CAAAQ,SAAA,CAAAC,MAAA;EACA,OAAAT,KAAA;AACA;;AAEA;AACA;AACA;AACA,SAAAc,eACAP,MAAA,EACAb,KAAA,EACAqB,KAAA,EACAvB,GAAA,EAEA;EAAA,IADAwB,KAAA,GAAA9B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;EAEA,KAAAwB,YAAA,CAAAK,KAAA,CAAAvB,GAAA,GAAAoB,KAAA,KAAAI,KAAA,CAAA7B,MAAA,QAAAO,KAAA;IACA,OAAAsB,KAAA;EACA;EACA,MAAAR,SAAA,GAAAS,kBAAA,CAAAV,MAAA,EAAAQ,KAAA,CAAAvB,GAAA;EACA,OAAAsB,cAAA,CAAAP,MAAA,EAAAb,KAAA,EAAAqB,KAAA,CAAAvB,GAAA,GAAAA,GAAA,GAAAgB,SAAA,KAAAQ,KAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
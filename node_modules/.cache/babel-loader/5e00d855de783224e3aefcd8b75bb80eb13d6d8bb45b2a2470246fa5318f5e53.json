{"ast":null,"code":"import { WINDOW } from '@sentry/browser';\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\n/**\n * Creates routing instrumentation for React Router v3\n * Works for React Router >= 3.2.0 and < 4.0.0\n *\n * @param history object from the `history` library\n * @param routes a list of all routes, should be\n * @param match `Router.match` utility\n */\nfunction reactRouterV3Instrumentation(history, routes, match) {\n  return function (startTransaction) {\n    var startTransactionOnPageLoad = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var startTransactionOnLocationChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var activeTransaction;\n    var prevName;\n\n    // Have to use window.location because history.location might not be defined.\n    if (startTransactionOnPageLoad && WINDOW && WINDOW.location) {\n      normalizeTransactionName(routes, WINDOW.location, match, function (localName) {\n        var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'url';\n        prevName = localName;\n        activeTransaction = startTransaction({\n          name: prevName,\n          op: 'pageload',\n          tags: {\n            'routing.instrumentation': 'react-router-v3'\n          },\n          metadata: {\n            source: source\n          }\n        });\n      });\n    }\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(function (location) {\n        if (location.action === 'PUSH' || location.action === 'POP') {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n          var tags = {\n            'routing.instrumentation': 'react-router-v3'\n          };\n          if (prevName) {\n            tags.from = prevName;\n          }\n          normalizeTransactionName(routes, location, match, function (localName) {\n            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'url';\n            prevName = localName;\n            activeTransaction = startTransaction({\n              name: prevName,\n              op: 'navigation',\n              tags: tags,\n              metadata: {\n                source: source\n              }\n            });\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(appRoutes, location, match, callback) {\n  var name = location.pathname;\n  match({\n    location: location,\n    routes: appRoutes\n  }, function (error, _redirectLocation, renderProps) {\n    if (error || !renderProps) {\n      return callback(name);\n    }\n    var routePath = getRouteStringFromRoutes(renderProps.routes || []);\n    if (routePath.length === 0 || routePath === '/*') {\n      return callback(name);\n    }\n    name = routePath;\n    return callback(name, 'route');\n  });\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes) {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n  var routesWithPaths = routes.filter(function (route) {\n    return !!route.path;\n  });\n  var index = -1;\n  for (var x = routesWithPaths.length - 1; x >= 0; x--) {\n    var route = routesWithPaths[x];\n    if (route.path && route.path.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n  return routesWithPaths.slice(index).filter(function (_ref) {\n    var path = _ref.path;\n    return !!path;\n  }).map(function (_ref2) {\n    var path = _ref2.path;\n    return path;\n  }).join('');\n}\nexport { reactRouterV3Instrumentation };","map":{"version":3,"names":["reactRouterV3Instrumentation","history","routes","match","startTransaction","startTransactionOnPageLoad","arguments","length","undefined","startTransactionOnLocationChange","activeTransaction","prevName","WINDOW","location","normalizeTransactionName","localName","source","name","op","tags","metadata","listen","action","finish","from","appRoutes","callback","pathname","error","_redirectLocation","renderProps","routePath","getRouteStringFromRoutes","Array","isArray","routesWithPaths","filter","route","path","index","x","startsWith","slice","_ref","map","_ref2","join"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry/src/reactrouterv3.ts"],"sourcesContent":["import { WINDOW } from '@sentry/browser';\nimport type { Primitive, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\n\nimport type { Location, ReactRouterInstrumentation } from './types';\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\ntype HistoryV3 = {\n  location?: Location;\n  listen?(cb: (location: Location) => void): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n} & Record<string, any>;\n\nexport type Route = { path?: string; childRoutes?: Route[] };\n\nexport type Match = (\n  props: { location: Location; routes: Route[] },\n  cb: (error?: Error, _redirectLocation?: Location, renderProps?: { routes?: Route[] }) => void,\n) => void;\n\ntype ReactRouterV3TransactionSource = Extract<TransactionSource, 'url' | 'route'>;\n\n/**\n * Creates routing instrumentation for React Router v3\n * Works for React Router >= 3.2.0 and < 4.0.0\n *\n * @param history object from the `history` library\n * @param routes a list of all routes, should be\n * @param match `Router.match` utility\n */\nexport function reactRouterV3Instrumentation(\n  history: HistoryV3,\n  routes: Route[],\n  match: Match,\n): ReactRouterInstrumentation {\n  return (\n    startTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad: boolean = true,\n    startTransactionOnLocationChange: boolean = true,\n  ) => {\n    let activeTransaction: Transaction | undefined;\n    let prevName: string | undefined;\n\n    // Have to use window.location because history.location might not be defined.\n    if (startTransactionOnPageLoad && WINDOW && WINDOW.location) {\n      normalizeTransactionName(\n        routes,\n        WINDOW.location as unknown as Location,\n        match,\n        (localName: string, source: ReactRouterV3TransactionSource = 'url') => {\n          prevName = localName;\n          activeTransaction = startTransaction({\n            name: prevName,\n            op: 'pageload',\n            tags: {\n              'routing.instrumentation': 'react-router-v3',\n            },\n            metadata: {\n              source,\n            },\n          });\n        },\n      );\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(location => {\n        if (location.action === 'PUSH' || location.action === 'POP') {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n          const tags: Record<string, Primitive> = {\n            'routing.instrumentation': 'react-router-v3',\n          };\n          if (prevName) {\n            tags.from = prevName;\n          }\n          normalizeTransactionName(routes, location, match, (localName: string, source: TransactionSource = 'url') => {\n            prevName = localName;\n            activeTransaction = startTransaction({\n              name: prevName,\n              op: 'navigation',\n              tags,\n              metadata: {\n                source,\n              },\n            });\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(\n  appRoutes: Route[],\n  location: Location,\n  match: Match,\n  callback: (pathname: string, source?: ReactRouterV3TransactionSource) => void,\n): void {\n  let name = location.pathname;\n  match(\n    {\n      location,\n      routes: appRoutes,\n    },\n    (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n\n      name = routePath;\n      return callback(name, 'route');\n    },\n  );\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes: Route[]): string {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n\n  const routesWithPaths: Route[] = routes.filter((route: Route) => !!route.path);\n\n  let index = -1;\n  for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n    const route = routesWithPaths[x];\n    if (route.path && route.path.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n\n  return routesWithPaths\n    .slice(index)\n    .filter(({ path }) => !!path)\n    .map(({ path }) => path)\n    .join('');\n}\n"],"mappings":";;AAKA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAAA,6BACAC,OAAA,EACAC,MAAA,EACAC,KAAA,EACA;EACA,iBACAC,gBAAA,EAGA;IAAA,IAFAC,0BAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;IAAA,IACAG,gCAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;IAEA,IAAAI,iBAAA;IACA,IAAAC,QAAA;;IAEA;IACA,IAAAN,0BAAA,IAAAO,MAAA,IAAAA,MAAA,CAAAC,QAAA;MACAC,wBAAA,CACAZ,MAAA,EACAU,MAAA,CAAAC,QAAA,EACAV,KAAA,EACA,UAAAY,SAAA;QAAA,IAAAC,MAAA,GAAAV,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;QACAK,QAAA,GAAAI,SAAA;QACAL,iBAAA,GAAAN,gBAAA;UACAa,IAAA,EAAAN,QAAA;UACAO,EAAA;UACAC,IAAA;YACA;UACA;UACAC,QAAA;YACAJ,MAAA,EAAAA;UACA;QACA;MACA,CACA;IACA;IAEA,IAAAP,gCAAA,IAAAR,OAAA,CAAAoB,MAAA;MACApB,OAAA,CAAAoB,MAAA,WAAAR,QAAA;QACA,IAAAA,QAAA,CAAAS,MAAA,eAAAT,QAAA,CAAAS,MAAA;UACA,IAAAZ,iBAAA;YACAA,iBAAA,CAAAa,MAAA;UACA;UACA,IAAAJ,IAAA;YACA;UACA;UACA,IAAAR,QAAA;YACAQ,IAAA,CAAAK,IAAA,GAAAb,QAAA;UACA;UACAG,wBAAA,CAAAZ,MAAA,EAAAW,QAAA,EAAAV,KAAA,YAAAY,SAAA;YAAA,IAAAC,MAAA,GAAAV,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;YACAK,QAAA,GAAAI,SAAA;YACAL,iBAAA,GAAAN,gBAAA;cACAa,IAAA,EAAAN,QAAA;cACAO,EAAA;cACAC,IAAA,EAAAA,IAAA;cACAC,QAAA;gBACAJ,MAAA,EAAAA;cACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA;;AAEA;AACA;AACA;AACA,SAAAF,yBACAW,SAAA,EACAZ,QAAA,EACAV,KAAA,EACAuB,QAAA,EACA;EACA,IAAAT,IAAA,GAAAJ,QAAA,CAAAc,QAAA;EACAxB,KAAA,CACA;IACAU,QAAA,EAAAA,QAAA;IACAX,MAAA,EAAAuB;EACA,GACA,UAAAG,KAAA,EAAAC,iBAAA,EAAAC,WAAA;IACA,IAAAF,KAAA,KAAAE,WAAA;MACA,OAAAJ,QAAA,CAAAT,IAAA;IACA;IAEA,IAAAc,SAAA,GAAAC,wBAAA,CAAAF,WAAA,CAAA5B,MAAA;IACA,IAAA6B,SAAA,CAAAxB,MAAA,UAAAwB,SAAA;MACA,OAAAL,QAAA,CAAAT,IAAA;IACA;IAEAA,IAAA,GAAAc,SAAA;IACA,OAAAL,QAAA,CAAAT,IAAA;EACA,CACA;AACA;;AAEA;AACA;AACA;AACA,SAAAe,yBAAA9B,MAAA;EACA,KAAA+B,KAAA,CAAAC,OAAA,CAAAhC,MAAA,KAAAA,MAAA,CAAAK,MAAA;IACA;EACA;EAEA,IAAA4B,eAAA,GAAAjC,MAAA,CAAAkC,MAAA,WAAAC,KAAA;IAAA,SAAAA,KAAA,CAAAC,IAAA;EAAA;EAEA,IAAAC,KAAA;EACA,SAAAC,CAAA,GAAAL,eAAA,CAAA5B,MAAA,MAAAiC,CAAA,OAAAA,CAAA;IACA,IAAAH,KAAA,GAAAF,eAAA,CAAAK,CAAA;IACA,IAAAH,KAAA,CAAAC,IAAA,IAAAD,KAAA,CAAAC,IAAA,CAAAG,UAAA;MACAF,KAAA,GAAAC,CAAA;MACA;IACA;EACA;EAEA,OAAAL,eAAA,CACAO,KAAA,CAAAH,KAAA,EACAH,MAAA,WAAAO,IAAA;IAAA,IAAAL,IAAA,GAAAK,IAAA,CAAAL,IAAA;IAAA,SAAAA,IAAA;EAAA,GACAM,GAAA,WAAAC,KAAA;IAAA,IAAAP,IAAA,GAAAO,KAAA,CAAAP,IAAA;IAAA,OAAAA,IAAA;EAAA,GACAQ,IAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
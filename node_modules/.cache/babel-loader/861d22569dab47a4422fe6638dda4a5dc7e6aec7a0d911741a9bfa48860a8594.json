{"ast":null,"code":"import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onerror = reject;\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After')\n            }\n          });\n        }\n      };\n      xhr.open('POST', options.url);\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n      xhr.send(request.body);\n    });\n  }\n  return createTransport(options, makeRequest);\n}\nexport { makeXHRTransport };","map":{"version":3,"names":["XHR_READYSTATE_DONE","makeXHRTransport","options","makeRequest","request","SyncPromise","resolve","reject","xhr","XMLHttpRequest","onerror","onreadystatechange","readyState","statusCode","status","headers","getResponseHeader","open","url","header","Object","prototype","hasOwnProperty","call","setRequestHeader","send","body","createTransport"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/src/transports/xhr.ts"],"sourcesContent":["import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nexport function makeXHRTransport(options: BrowserTransportOptions): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n"],"mappings":";;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAAA,mBAAA;;AAEA;AACA;AACA;AACA,SAAAC,iBAAAC,OAAA;EACA,SAAAC,YAAAC,OAAA;IACA,WAAAC,WAAA,EAAAC,OAAA,EAAAC,MAAA;MACA,MAAAC,GAAA,OAAAC,cAAA;MAEAD,GAAA,CAAAE,OAAA,GAAAH,MAAA;MAEAC,GAAA,CAAAG,kBAAA;QACA,IAAAH,GAAA,CAAAI,UAAA,KAAAZ,mBAAA;UACAM,OAAA;YACAO,UAAA,EAAAL,GAAA,CAAAM,MAAA;YACAC,OAAA;cACA,wBAAAP,GAAA,CAAAQ,iBAAA;cACA,eAAAR,GAAA,CAAAQ,iBAAA;YACA;UACA;QACA;MACA;MAEAR,GAAA,CAAAS,IAAA,SAAAf,OAAA,CAAAgB,GAAA;MAEA,WAAAC,MAAA,IAAAjB,OAAA,CAAAa,OAAA;QACA,IAAAK,MAAA,CAAAC,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAArB,OAAA,CAAAa,OAAA,EAAAI,MAAA;UACAX,GAAA,CAAAgB,gBAAA,CAAAL,MAAA,EAAAjB,OAAA,CAAAa,OAAA,CAAAI,MAAA;QACA;MACA;MAEAX,GAAA,CAAAiB,IAAA,CAAArB,OAAA,CAAAsB,IAAA;IACA;EACA;EAEA,OAAAC,eAAA,CAAAzB,OAAA,EAAAC,WAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
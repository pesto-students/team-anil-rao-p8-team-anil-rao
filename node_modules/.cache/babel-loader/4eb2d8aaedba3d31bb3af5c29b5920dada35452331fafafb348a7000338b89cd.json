{"ast":null,"code":"import _objectSpread from \"/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nvar HttpContext = /*#__PURE__*/function () {\n  function HttpContext() {\n    _classCallCheck(this, HttpContext);\n    HttpContext.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n  _createClass(HttpContext, [{\n    key: \"__init\",\n    value:\n    /**\n     * @inheritDoc\n     */\n    function __init() {\n      this.name = HttpContext.id;\n    }\n\n    /**\n     * @inheritDoc\n     */\n  }, {\n    key: \"setupOnce\",\n    value: function setupOnce() {\n      addGlobalEventProcessor(function (event) {\n        if (getCurrentHub().getIntegration(HttpContext)) {\n          // if none of the information we want exists, don't bother\n          if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n            return event;\n          }\n\n          // grab as much info as exists and add it to the event\n          var url = event.request && event.request.url || WINDOW.location && WINDOW.location.href;\n          var _ref = WINDOW.document || {},\n            referrer = _ref.referrer;\n          var _ref2 = WINDOW.navigator || {},\n            userAgent = _ref2.userAgent;\n          var headers = _objectSpread(_objectSpread(_objectSpread({}, event.request && event.request.headers), referrer && {\n            Referer: referrer\n          }), userAgent && {\n            'User-Agent': userAgent\n          });\n          var request = _objectSpread(_objectSpread(_objectSpread({}, event.request), url && {\n            url: url\n          }), {}, {\n            headers: headers\n          });\n          return _objectSpread(_objectSpread({}, event), {}, {\n            request: request\n          });\n        }\n        return event;\n      });\n    }\n  }], [{\n    key: \"__initStatic\",\n    value: function __initStatic() {\n      this.id = 'HttpContext';\n    }\n  }]);\n  return HttpContext;\n}();\nHttpContext.__initStatic();\nexport { HttpContext };","map":{"version":3,"names":["HttpContext","_classCallCheck","prototype","__init","call","_createClass","key","value","name","id","setupOnce","addGlobalEventProcessor","event","getCurrentHub","getIntegration","WINDOW","navigator","location","document","url","request","href","_ref","referrer","_ref2","userAgent","headers","_objectSpread","Referer","__initStatic"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/src/integrations/httpcontext.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport type { Event, Integration } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\n/** HttpContext integration collects information about HTTP request headers */\nexport class HttpContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'HttpContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = HttpContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n        const { referrer } = WINDOW.document || {};\n        const { userAgent } = WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...event.request, ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n"],"mappings":";;;;;;AAKA;AAAA,IACAA,WAAA;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;IAAAA,WAAA,CAAAE,SAAA,CAAAC,MAAA,CAAAC,IAAA;EAAA;EACA;AACA;AACA;EAFAC,YAAA,CAAAL,WAAA;IAAAM,GAAA;IAAAC,KAAA;IAKA;AACA;AACA;IACA,SAAAJ,OAAA;MAAA,KAAAK,IAAA,GAAAR,WAAA,CAAAS,EAAA;IAAA;;IAEA;AACA;AACA;EAFA;IAAAH,GAAA;IAAAC,KAAA,EAGA,SAAAG,UAAA;MACAC,uBAAA,WAAAC,KAAA;QACA,IAAAC,aAAA,GAAAC,cAAA,CAAAd,WAAA;UACA;UACA,KAAAe,MAAA,CAAAC,SAAA,KAAAD,MAAA,CAAAE,QAAA,KAAAF,MAAA,CAAAG,QAAA;YACA,OAAAN,KAAA;UACA;;UAEA;UACA,IAAAO,GAAA,GAAAP,KAAA,CAAAQ,OAAA,IAAAR,KAAA,CAAAQ,OAAA,CAAAD,GAAA,IAAAJ,MAAA,CAAAE,QAAA,IAAAF,MAAA,CAAAE,QAAA,CAAAI,IAAA;UACA,IAAAC,IAAA,GAAAP,MAAA,CAAAG,QAAA;YAAAK,QAAA,GAAAD,IAAA,CAAAC,QAAA;UACA,IAAAC,KAAA,GAAAT,MAAA,CAAAC,SAAA;YAAAS,SAAA,GAAAD,KAAA,CAAAC,SAAA;UAEA,IAAAC,OAAA,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACAf,KAAA,CAAAQ,OAAA,IAAAR,KAAA,CAAAQ,OAAA,CAAAM,OAAA,GACAH,QAAA;YAAAK,OAAA,EAAAL;UAAA,IACAE,SAAA;YAAA,cAAAA;UAAA,EACA;UACA,IAAAL,OAAA,GAAAO,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAAf,KAAA,CAAAQ,OAAA,GAAAD,GAAA;YAAAA,GAAA,EAAAA;UAAA;YAAAO,OAAA,EAAAA;UAAA;UAEA,OAAAC,aAAA,CAAAA,aAAA,KAAAf,KAAA;YAAAQ,OAAA,EAAAA;UAAA;QACA;QACA,OAAAR,KAAA;MACA;IACA;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAlCA,SAAAsB,aAAA;MAAA,KAAApB,EAAA;IAAA;EAAA;EAAA,OAAAT,WAAA;AAAA;AAmCAA,WAAA,CAAA6B,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
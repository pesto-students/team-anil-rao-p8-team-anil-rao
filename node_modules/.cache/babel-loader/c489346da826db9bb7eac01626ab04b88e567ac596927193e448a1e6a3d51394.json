{"ast":null,"code":"import { getActiveTransaction } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { WINDOW } from './types.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', function () {\n      var activeTransaction = getActiveTransaction();\n      if (WINDOW.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(\"[Tracing] Transaction: \".concat(statusType, \" -> since tab moved to the background, op: \").concat(activeTransaction.op));\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\nexport { registerBackgroundTabDetection };","map":{"version":3,"names":["registerBackgroundTabDetection","WINDOW","document","addEventListener","activeTransaction","getActiveTransaction","hidden","statusType","__SENTRY_DEBUG__","logger","log","concat","op","status","setStatus","setTag","finish","warn"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry-internal/src/browser/backgroundtab.ts"],"sourcesContent":["import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        __DEBUG_BUILD__ &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    __DEBUG_BUILD__ &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"],"mappings":";;;;AAMA;AACA;AACA;AACA;AACA,SAAAA,+BAAA;EACA,IAAAC,MAAA,IAAAA,MAAA,CAAAC,QAAA;IACAD,MAAA,CAAAC,QAAA,CAAAC,gBAAA;MACA,IAAAC,iBAAA,GAAAC,oBAAA;MACA,IAAAJ,MAAA,CAAAC,QAAA,CAAAI,MAAA,IAAAF,iBAAA;QACA,IAAAG,UAAA;QAEA,QAAAC,gBAAA,oBAAAA,gBAAA,KACAC,MAAA,CAAAC,GAAA,2BAAAC,MAAA,CACAJ,UAAA,iDAAAI,MAAA,CAAAP,iBAAA,CAAAQ,EAAA,CACA;QACA;QACA;QACA,KAAAR,iBAAA,CAAAS,MAAA;UACAT,iBAAA,CAAAU,SAAA,CAAAP,UAAA;QACA;QACAH,iBAAA,CAAAW,MAAA;QACAX,iBAAA,CAAAY,MAAA;MACA;IACA;EACA;IACA,QAAAR,gBAAA,oBAAAA,gBAAA,KACAC,MAAA,CAAAQ,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
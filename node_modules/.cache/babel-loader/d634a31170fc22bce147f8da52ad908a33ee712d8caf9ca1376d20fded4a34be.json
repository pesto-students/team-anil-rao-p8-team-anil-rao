{"ast":null,"code":"var TRACEPARENT_REGEXP = new RegExp('^[ \\\\t]*' +\n// whitespace\n'([0-9a-f]{32})?' +\n// trace_id\n'-?([0-9a-f]{16})?' +\n// span_id\n'-?([01])?' +\n// sampled\n'[ \\\\t]*$') // whitespace\n;\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  var matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!traceparent || !matches) {\n    // empty string or no matches is invalid traceparent data\n    return undefined;\n  }\n  var parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n  return {\n    traceId: matches[1],\n    parentSampled: parentSampled,\n    parentSpanId: matches[2]\n  };\n}\nexport { TRACEPARENT_REGEXP, extractTraceparentData };","map":{"version":3,"names":["TRACEPARENT_REGEXP","RegExp","extractTraceparentData","traceparent","matches","match","undefined","parentSampled","traceId","parentSpanId"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry/src/tracing.ts"],"sourcesContent":["import type { TraceparentData } from '@sentry/types';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent: string): TraceparentData | undefined {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n\n  if (!traceparent || !matches) {\n    // empty string or no matches is invalid traceparent data\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n"],"mappings":"AAEA,IAAAA,kBAAA,OAAAC,MAAA,CACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA,UACA,EADA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAAC,uBAAAC,WAAA;EACA,IAAAC,OAAA,GAAAD,WAAA,CAAAE,KAAA,CAAAL,kBAAA;EAEA,KAAAG,WAAA,KAAAC,OAAA;IACA;IACA,OAAAE,SAAA;EACA;EAEA,IAAAC,aAAA;EACA,IAAAH,OAAA;IACAG,aAAA;EACA,WAAAH,OAAA;IACAG,aAAA;EACA;EAEA;IACAC,OAAA,EAAAJ,OAAA;IACAG,aAAA,EAAAA,aAAA;IACAE,YAAA,EAAAL,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
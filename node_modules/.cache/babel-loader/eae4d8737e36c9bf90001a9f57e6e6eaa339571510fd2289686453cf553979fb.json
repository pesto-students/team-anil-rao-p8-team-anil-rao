{"ast":null,"code":"var bindReporter = function bindReporter(callback, metric, reportAllChanges) {\n  var prevValue;\n  var delta;\n  return function (forceReport) {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\nexport { bindReporter };","map":{"version":3,"names":["bindReporter","callback","metric","reportAllChanges","prevValue","delta","forceReport","value","undefined"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry-internal/src/browser/web-vitals/lib/bindReporter.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n"],"mappings":"AAkBA,IAAAA,YAAA,YAAAA,aACAC,QAAA,EACAC,MAAA,EACAC,gBAAA,EACA;EACA,IAAAC,SAAA;EACA,IAAAC,KAAA;EACA,iBAAAC,WAAA;IACA,IAAAJ,MAAA,CAAAK,KAAA;MACA,IAAAD,WAAA,IAAAH,gBAAA;QACAE,KAAA,GAAAH,MAAA,CAAAK,KAAA,IAAAH,SAAA;;QAEA;QACA;QACA;QACA;QACA,IAAAC,KAAA,IAAAD,SAAA,KAAAI,SAAA;UACAJ,SAAA,GAAAF,MAAA,CAAAK,KAAA;UACAL,MAAA,CAAAG,KAAA,GAAAA,KAAA;UACAJ,QAAA,CAAAC,MAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
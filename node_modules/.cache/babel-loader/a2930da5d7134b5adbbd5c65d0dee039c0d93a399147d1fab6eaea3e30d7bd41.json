{"ast":null,"code":"import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for graphql package */\nclass GraphQL {\n  constructor() {\n    GraphQL.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n  static __initStatic() {\n    this.id = 'GraphQL';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  __init() {\n    this.name = GraphQL.id;\n  }\n\n  /** @inheritdoc */\n  loadDependency() {\n    return this._module = this._module || loadModule('graphql/execution/execute.js');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n    const pkg = this.loadDependency();\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n    fill(pkg, 'execute', function (orig) {\n      return function () {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = _optionalChain([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n        const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: 'execute',\n          op: 'graphql.execute'\n        })]);\n        _optionalChain([scope, 'optionalAccess', _6 => _6.setSpan, 'call', _7 => _7(span)]);\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const rv = orig.call(this, ...args);\n        if (isThenable(rv)) {\n          return rv.then(res => {\n            _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            _optionalChain([scope, 'optionalAccess', _10 => _10.setSpan, 'call', _11 => _11(parentSpan)]);\n            return res;\n          });\n        }\n        _optionalChain([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n        _optionalChain([scope, 'optionalAccess', _14 => _14.setSpan, 'call', _15 => _15(parentSpan)]);\n        return rv;\n      };\n    });\n  }\n}\nGraphQL.__initStatic();\nexport { GraphQL };","map":{"version":3,"names":["GraphQL","constructor","prototype","__init","call","__initStatic","id","name","loadDependency","_module","loadModule","setupOnce","_","getCurrentHub","shouldDisableAutoInstrumentation","__SENTRY_DEBUG__","logger","log","pkg","error","fill","orig","scope","getScope","parentSpan","_optionalChain","_2","getSpan","_3","span","_4","startChild","_5","description","op","_6","setSpan","_7","_len","arguments","length","args","Array","_key","rv","isThenable","then","res","_8","finish","_9","_10","_11","_12","_13","_14","_15"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry-internal/src/node/integrations/graphql.ts"],"sourcesContent":["import type { Hub } from '@sentry/core';\nimport type { EventProcessor } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ntype GraphQLModule = {\n  [method: string]: (...args: unknown[]) => unknown;\n};\n\n/** Tracing integration for graphql package */\nexport class GraphQL implements LazyLoadedIntegration<GraphQLModule> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GraphQL';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GraphQL.id;\n\n  private _module?: GraphQLModule;\n\n  /** @inheritdoc */\n  public loadDependency(): GraphQLModule | undefined {\n    return (this._module = this._module || loadModule('graphql/execution/execute.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      __DEBUG_BUILD__ && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig: () => void | Promise<unknown>) {\n      return function (this: unknown, ...args: unknown[]) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n\n        const span = parentSpan?.startChild({\n          description: 'execute',\n          op: 'graphql.execute',\n        });\n\n        scope?.setSpan(span);\n\n        const rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then((res: unknown) => {\n            span?.finish();\n            scope?.setSpan(parentSpan);\n\n            return res;\n          });\n        }\n\n        span?.finish();\n        scope?.setSpan(parentSpan);\n        return rv;\n      };\n    });\n  }\n}\n"],"mappings":";;;;AAWA;AACA,MAAAA,OAAA;EAAAC,YAAA;IAAAD,OAAA,CAAAE,SAAA,CAAAC,MAAA,CAAAC,IAAA;EAAA;EACA;;;EAGA,OAAAC,aAAA;IAAA,KAAAC,EAAA;EAAA;;EAEA;;;EAGAH,OAAA;IAAA,KAAAI,IAAA,GAAAP,OAAA,CAAAM,EAAA;EAAA;;EAIA;EACAE,eAAA;IACA,YAAAC,OAAA,QAAAA,OAAA,IAAAC,UAAA;EACA;;EAEA;;;EAGAC,UAAAC,CAAA,EAAAC,aAAA;IACA,IAAAC,gCAAA,CAAAD,aAAA;MACA,QAAAE,gBAAA,oBAAAA,gBAAA,KAAAC,MAAA,CAAAC,GAAA;MACA;IACA;IAEA,MAAAC,GAAA,QAAAV,cAAA;IAEA,KAAAU,GAAA;MACA,QAAAH,gBAAA,oBAAAA,gBAAA,KAAAC,MAAA,CAAAG,KAAA;MACA;IACA;IAEAC,IAAA,CAAAF,GAAA,uBAAAG,IAAA;MACA;QACA,MAAAC,KAAA,GAAAT,aAAA,GAAAU,QAAA;QACA,MAAAC,UAAA,GAAAC,cAAA,EAAAH,KAAA,oBAAAI,EAAA,IAAAA,EAAA,CAAAC,OAAA,UAAAC,EAAA,IAAAA,EAAA;QAEA,MAAAC,IAAA,GAAAJ,cAAA,EAAAD,UAAA,oBAAAM,EAAA,IAAAA,EAAA,CAAAC,UAAA,UAAAC,EAAA,IAAAA,EAAA;UACAC,WAAA;UACAC,EAAA;QACA;QAEAT,cAAA,EAAAH,KAAA,oBAAAa,EAAA,IAAAA,EAAA,CAAAC,OAAA,UAAAC,EAAA,IAAAA,EAAA,CAAAR,IAAA;QAAA,SAAAS,IAAA,GAAAC,SAAA,CAAAC,MAAA,EATAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;UAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;QAAA;QAWA,MAAAC,EAAA,GAAAvB,IAAA,CAAAjB,IAAA,UAAAqC,IAAA;QAEA,IAAAI,UAAA,CAAAD,EAAA;UACA,OAAAA,EAAA,CAAAE,IAAA,CAAAC,GAAA;YACAtB,cAAA,EAAAI,IAAA,oBAAAmB,EAAA,IAAAA,EAAA,CAAAC,MAAA,UAAAC,EAAA,IAAAA,EAAA;YACAzB,cAAA,EAAAH,KAAA,oBAAA6B,GAAA,IAAAA,GAAA,CAAAf,OAAA,UAAAgB,GAAA,IAAAA,GAAA,CAAA5B,UAAA;YAEA,OAAAuB,GAAA;UACA;QACA;QAEAtB,cAAA,EAAAI,IAAA,oBAAAwB,GAAA,IAAAA,GAAA,CAAAJ,MAAA,UAAAK,GAAA,IAAAA,GAAA;QACA7B,cAAA,EAAAH,KAAA,oBAAAiC,GAAA,IAAAA,GAAA,CAAAnB,OAAA,UAAAoB,GAAA,IAAAA,GAAA,CAAAhC,UAAA;QACA,OAAAoB,EAAA;MACA;IACA;EACA;AACA;AAAA5C,OAAA,CAAAK,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
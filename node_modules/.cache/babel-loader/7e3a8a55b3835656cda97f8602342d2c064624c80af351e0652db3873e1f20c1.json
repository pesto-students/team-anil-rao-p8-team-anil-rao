{"ast":null,"code":"import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext {\n  constructor() {\n    HttpContext.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n  static __initStatic() {\n    this.id = 'HttpContext';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  __init() {\n    this.name = HttpContext.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setupOnce() {\n    addGlobalEventProcessor(event => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = event.request && event.request.url || WINDOW.location && WINDOW.location.href;\n        const {\n          referrer\n        } = WINDOW.document || {};\n        const {\n          userAgent\n        } = WINDOW.navigator || {};\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && {\n            Referer: referrer\n          }),\n          ...(userAgent && {\n            'User-Agent': userAgent\n          })\n        };\n        const request = {\n          ...event.request,\n          ...(url && {\n            url\n          }),\n          headers\n        };\n        return {\n          ...event,\n          request\n        };\n      }\n      return event;\n    });\n  }\n}\nHttpContext.__initStatic();\nexport { HttpContext };","map":{"version":3,"names":["HttpContext","constructor","prototype","__init","call","__initStatic","id","name","setupOnce","addGlobalEventProcessor","event","getCurrentHub","getIntegration","WINDOW","navigator","location","document","url","request","href","referrer","userAgent","headers","Referer"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/src/integrations/httpcontext.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport type { Event, Integration } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\n/** HttpContext integration collects information about HTTP request headers */\nexport class HttpContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'HttpContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = HttpContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n        const { referrer } = WINDOW.document || {};\n        const { userAgent } = WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...event.request, ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n"],"mappings":";;;AAKA;AACA,MAAAA,WAAA;EAAAC,YAAA;IAAAD,WAAA,CAAAE,SAAA,CAAAC,MAAA,CAAAC,IAAA;EAAA;EACA;AACA;AACA;EACA,OAAAC,aAAA;IAAA,KAAAC,EAAA;EAAA;;EAEA;AACA;AACA;EACAH,OAAA;IAAA,KAAAI,IAAA,GAAAP,WAAA,CAAAM,EAAA;EAAA;;EAEA;AACA;AACA;EACAE,UAAA;IACAC,uBAAA,CAAAC,KAAA;MACA,IAAAC,aAAA,GAAAC,cAAA,CAAAZ,WAAA;QACA;QACA,KAAAa,MAAA,CAAAC,SAAA,KAAAD,MAAA,CAAAE,QAAA,KAAAF,MAAA,CAAAG,QAAA;UACA,OAAAN,KAAA;QACA;;QAEA;QACA,MAAAO,GAAA,GAAAP,KAAA,CAAAQ,OAAA,IAAAR,KAAA,CAAAQ,OAAA,CAAAD,GAAA,IAAAJ,MAAA,CAAAE,QAAA,IAAAF,MAAA,CAAAE,QAAA,CAAAI,IAAA;QACA;UAAAC;QAAA,IAAAP,MAAA,CAAAG,QAAA;QACA;UAAAK;QAAA,IAAAR,MAAA,CAAAC,SAAA;QAEA,MAAAQ,OAAA;UACA,IAAAZ,KAAA,CAAAQ,OAAA,IAAAR,KAAA,CAAAQ,OAAA,CAAAI,OAAA;UACA,IAAAF,QAAA;YAAAG,OAAA,EAAAH;UAAA;UACA,IAAAC,SAAA;YAAA,cAAAA;UAAA;QACA;QACA,MAAAH,OAAA;UAAA,GAAAR,KAAA,CAAAQ,OAAA;UAAA,IAAAD,GAAA;YAAAA;UAAA;UAAAK;QAAA;QAEA;UAAA,GAAAZ,KAAA;UAAAQ;QAAA;MACA;MACA,OAAAR,KAAA;IACA;EACA;AACA;AAAAV,WAAA,CAAAK,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
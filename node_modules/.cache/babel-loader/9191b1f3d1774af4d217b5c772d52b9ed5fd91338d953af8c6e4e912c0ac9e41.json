{"ast":null,"code":"import _toConsumableArray from \"/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nvar LinkedErrors = /*#__PURE__*/function () {\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n  function LinkedErrors() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, LinkedErrors);\n    LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _createClass(LinkedErrors, [{\n    key: \"__init\",\n    value:\n    /**\n     * @inheritDoc\n     */\n    function __init() {\n      this.name = LinkedErrors.id;\n    }\n  }, {\n    key: \"setupOnce\",\n    value: function setupOnce() {\n      var client = getCurrentHub().getClient();\n      if (!client) {\n        return;\n      }\n      addGlobalEventProcessor(function (event, hint) {\n        var self = getCurrentHub().getIntegration(LinkedErrors);\n        return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n      });\n    }\n  }], [{\n    key: \"__initStatic\",\n    value:\n    /**\n     * @inheritDoc\n     */\n    function __initStatic() {\n      this.id = 'LinkedErrors';\n    }\n  }]);\n  return LinkedErrors;\n}();\nLinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(parser, key, limit, event, hint) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException, key);\n  event.exception.values = [].concat(_toConsumableArray(linkedErrors), _toConsumableArray(event.exception.values));\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(parser, limit, error, key) {\n  var stack = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception].concat(_toConsumableArray(stack)));\n}\nexport { LinkedErrors, _handler, _walkErrorTree };","map":{"version":3,"names":["DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","options","arguments","length","undefined","_classCallCheck","prototype","__init","call","_key","key","_limit","limit","_createClass","value","name","id","setupOnce","client","getCurrentHub","getClient","addGlobalEventProcessor","event","hint","self","getIntegration","_handler","getOptions","stackParser","__initStatic","parser","exception","values","isInstanceOf","originalException","Error","linkedErrors","_walkErrorTree","concat","_toConsumableArray","error","stack","exceptionFromError"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/src/integrations/linkederrors.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport type { Event, EventHint, Exception, ExtendedError, Integration, StackParser } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { exceptionFromError } from '../eventbuilder';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\ninterface LinkedErrorsOptions {\n  key: string;\n  limit: number;\n}\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: LinkedErrorsOptions['key'];\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: LinkedErrorsOptions['limit'];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: Partial<LinkedErrorsOptions> = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    const client = getCurrentHub().getClient<BrowserClient>();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n}\n\n/**\n * @inheritDoc\n */\nexport function _handler(\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): Event | null {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException as ExtendedError, key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nexport function _walkErrorTree(\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  stack: Exception[] = [],\n): Exception[] {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n"],"mappings":";;;;;;AAOA,IAAAA,WAAA;AACA,IAAAC,aAAA;;AAOA;AAAA,IACAC,YAAA;EAWA;AACA;AACA;;EAGA;AACA;AACA;;EAGA;AACA;AACA;EACA,SAAAA,aAAA;IAAA,IAAAC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;IAAAG,eAAA,OAAAL,YAAA;IAAAA,YAAA,CAAAM,SAAA,CAAAC,MAAA,CAAAC,IAAA;IACA,KAAAC,IAAA,GAAAR,OAAA,CAAAS,GAAA,IAAAZ,WAAA;IACA,KAAAa,MAAA,GAAAV,OAAA,CAAAW,KAAA,IAAAb,aAAA;EACA;;EAEA;AACA;AACA;EAFAc,YAAA,CAAAb,YAAA;IAAAU,GAAA;IAAAI,KAAA;IAvBA;AACA;AACA;IACA,SAAAP,OAAA;MAAA,KAAAQ,IAAA,GAAAf,YAAA,CAAAgB,EAAA;IAAA;EAAA;IAAAN,GAAA;IAAAI,KAAA,EAuBA,SAAAG,UAAA;MACA,IAAAC,MAAA,GAAAC,aAAA,GAAAC,SAAA;MACA,KAAAF,MAAA;QACA;MACA;MACAG,uBAAA,WAAAC,KAAA,EAAAC,IAAA;QACA,IAAAC,IAAA,GAAAL,aAAA,GAAAM,cAAA,CAAAzB,YAAA;QACA,OAAAwB,IAAA,GAAAE,QAAA,CAAAR,MAAA,CAAAS,UAAA,GAAAC,WAAA,EAAAJ,IAAA,CAAAf,IAAA,EAAAe,IAAA,CAAAb,MAAA,EAAAW,KAAA,EAAAC,IAAA,IAAAD,KAAA;MACA;IACA;EAAA;IAAAZ,GAAA;IAAAI,KAAA;IAxCA;AACA;AACA;IACA,SAAAe,aAAA;MAAA,KAAAb,EAAA;IAAA;EAAA;EAAA,OAAAhB,YAAA;AAAA;AAsCAA,YAAA,CAAA6B,YAAA;;AAEA;AACA;AACA;AACA,SAAAH,SACAI,MAAA,EACApB,GAAA,EACAE,KAAA,EACAU,KAAA,EACAC,IAAA,EACA;EACA,KAAAD,KAAA,CAAAS,SAAA,KAAAT,KAAA,CAAAS,SAAA,CAAAC,MAAA,KAAAT,IAAA,KAAAU,YAAA,CAAAV,IAAA,CAAAW,iBAAA,EAAAC,KAAA;IACA,OAAAb,KAAA;EACA;EACA,IAAAc,YAAA,GAAAC,cAAA,CAAAP,MAAA,EAAAlB,KAAA,EAAAW,IAAA,CAAAW,iBAAA,EAAAxB,GAAA;EACAY,KAAA,CAAAS,SAAA,CAAAC,MAAA,MAAAM,MAAA,CAAAC,kBAAA,CAAAH,YAAA,GAAAG,kBAAA,CAAAjB,KAAA,CAAAS,SAAA,CAAAC,MAAA;EACA,OAAAV,KAAA;AACA;;AAEA;AACA;AACA;AACA,SAAAe,eACAP,MAAA,EACAlB,KAAA,EACA4B,KAAA,EACA9B,GAAA,EAEA;EAAA,IADA+B,KAAA,GAAAvC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;EAEA,KAAA+B,YAAA,CAAAO,KAAA,CAAA9B,GAAA,GAAAyB,KAAA,KAAAM,KAAA,CAAAtC,MAAA,QAAAS,KAAA;IACA,OAAA6B,KAAA;EACA;EACA,IAAAV,SAAA,GAAAW,kBAAA,CAAAZ,MAAA,EAAAU,KAAA,CAAA9B,GAAA;EACA,OAAA2B,cAAA,CAAAP,MAAA,EAAAlB,KAAA,EAAA4B,KAAA,CAAA9B,GAAA,GAAAA,GAAA,GAAAqB,SAAA,EAAAO,MAAA,CAAAC,kBAAA,CAAAE,KAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
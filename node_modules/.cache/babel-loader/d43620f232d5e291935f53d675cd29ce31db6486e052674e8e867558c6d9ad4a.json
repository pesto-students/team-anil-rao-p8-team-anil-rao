{"ast":null,"code":"export { addTracingExtensions, startIdleTransaction } from './tracing/hubextensions.js';\nexport { IdleTransaction, TRACING_DEFAULTS } from './tracing/idletransaction.js';\nexport { Span, spanStatusfromHttpCode } from './tracing/span.js';\nexport { Transaction } from './tracing/transaction.js';\nexport { getActiveTransaction } from './tracing/utils.js';\nexport { SpanStatus } from './tracing/spanstatus.js';\nexport { trace } from './tracing/trace.js';\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope } from './exports.js';\nexport { Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier } from './hub.js';\nexport { closeSession, makeSession, updateSession } from './session.js';\nexport { SessionFlusher } from './sessionflusher.js';\nexport { Scope, addGlobalEventProcessor } from './scope.js';\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint } from './api.js';\nexport { BaseClient } from './baseclient.js';\nexport { initAndBind } from './sdk.js';\nexport { createTransport } from './transports/base.js';\nexport { makeOfflineTransport } from './transports/offline.js';\nexport { makeMultiplexedTransport } from './transports/multiplexed.js';\nexport { SDK_VERSION } from './version.js';\nexport { getIntegrationsToSetup } from './integration.js';\nimport * as index from './integrations/index.js';\nexport { index as Integrations };\nexport { prepareEvent } from './utils/prepareEvent.js';\nexport { createCheckInEnvelope } from './checkin.js';\nexport { hasTracingEnabled } from './utils/hasTracingEnabled.js';\nexport { DEFAULT_ENVIRONMENT } from './constants.js';\nexport { FunctionToString } from './integrations/functiontostring.js';\nexport { InboundFilters } from './integrations/inboundfilters.js';\nexport { extractTraceparentData } from '@sentry/utils';","map":{"version":3,"names":[],"sources":[],"sourcesContent":["export { addTracingExtensions, startIdleTransaction } from './tracing/hubextensions.js';\nexport { IdleTransaction, TRACING_DEFAULTS } from './tracing/idletransaction.js';\nexport { Span, spanStatusfromHttpCode } from './tracing/span.js';\nexport { Transaction } from './tracing/transaction.js';\nexport { getActiveTransaction } from './tracing/utils.js';\nexport { SpanStatus } from './tracing/spanstatus.js';\nexport { trace } from './tracing/trace.js';\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope } from './exports.js';\nexport { Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier } from './hub.js';\nexport { closeSession, makeSession, updateSession } from './session.js';\nexport { SessionFlusher } from './sessionflusher.js';\nexport { Scope, addGlobalEventProcessor } from './scope.js';\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint } from './api.js';\nexport { BaseClient } from './baseclient.js';\nexport { initAndBind } from './sdk.js';\nexport { createTransport } from './transports/base.js';\nexport { makeOfflineTransport } from './transports/offline.js';\nexport { makeMultiplexedTransport } from './transports/multiplexed.js';\nexport { SDK_VERSION } from './version.js';\nexport { getIntegrationsToSetup } from './integration.js';\nimport * as index from './integrations/index.js';\nexport { index as Integrations };\nexport { prepareEvent } from './utils/prepareEvent.js';\nexport { createCheckInEnvelope } from './checkin.js';\nexport { hasTracingEnabled } from './utils/hasTracingEnabled.js';\nexport { DEFAULT_ENVIRONMENT } from './constants.js';\nexport { FunctionToString } from './integrations/functiontostring.js';\nexport { InboundFilters } from './integrations/inboundfilters.js';\nexport { extractTraceparentData } from '@sentry/utils';\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}
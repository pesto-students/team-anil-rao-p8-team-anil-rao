{"ast":null,"code":"/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nfunction makeFifoCache(size) {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder = [];\n  let cache = {};\n  return {\n    add(key, value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key) {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key) {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n      return true;\n    }\n  };\n}\nexport { makeFifoCache };","map":{"version":3,"names":["makeFifoCache","size","evictionOrder","cache","add","key","value","length","evictCandidate","shift","undefined","delete","push","clear","get","i","splice"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry/src/cache.ts"],"sourcesContent":["/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nexport function makeFifoCache<Key extends string, Value>(\n  size: number,\n): {\n  get: (key: Key) => Value | undefined;\n  add: (key: Key, value: Value) => void;\n  delete: (key: Key) => boolean;\n  clear: () => void;\n  size: () => number;\n} {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder: Key[] = [];\n  let cache: Record<string, Value> = {};\n\n  return {\n    add(key: Key, value: Value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key: Key): Value | undefined {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key: Key): boolean {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAAA,cACAC,IAAA,EAOA;EACA;EACA,IAAAC,aAAA;EACA,IAAAC,KAAA;EAEA;IACAC,IAAAC,GAAA,EAAAC,KAAA;MACA,OAAAJ,aAAA,CAAAK,MAAA,IAAAN,IAAA;QACA;QACA;QACA,MAAAO,cAAA,GAAAN,aAAA,CAAAO,KAAA;QAEA,IAAAD,cAAA,KAAAE,SAAA;UACA;UACA,OAAAP,KAAA,CAAAK,cAAA;QACA;MACA;;MAEA;MACA,IAAAL,KAAA,CAAAE,GAAA;QACA,KAAAM,MAAA,CAAAN,GAAA;MACA;MAEAH,aAAA,CAAAU,IAAA,CAAAP,GAAA;MACAF,KAAA,CAAAE,GAAA,IAAAC,KAAA;IACA;IACAO,MAAA;MACAV,KAAA;MACAD,aAAA;IACA;IACAY,IAAAT,GAAA;MACA,OAAAF,KAAA,CAAAE,GAAA;IACA;IACAJ,KAAA;MACA,OAAAC,aAAA,CAAAK,MAAA;IACA;IACA;IACAI,OAAAN,GAAA;MACA,KAAAF,KAAA,CAAAE,GAAA;QACA;MACA;;MAEA;MACA,OAAAF,KAAA,CAAAE,GAAA;MAEA,SAAAU,CAAA,MAAAA,CAAA,GAAAb,aAAA,CAAAK,MAAA,EAAAQ,CAAA;QACA,IAAAb,aAAA,CAAAa,CAAA,MAAAV,GAAA;UACAH,aAAA,CAAAc,MAAA,CAAAD,CAAA;UACA;QACA;MACA;MAEA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
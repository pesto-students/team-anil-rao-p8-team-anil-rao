{"ast":null,"code":"import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nfunction shouldDisableAutoInstrumentation(getCurrentHub) {\n  const clientOptions = _optionalChain([getCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n  const instrumenter = _optionalChain([clientOptions, 'optionalAccess', _6 => _6.instrumenter]) || 'sentry';\n  return instrumenter !== 'sentry';\n}\nexport { shouldDisableAutoInstrumentation };","map":{"version":3,"names":["shouldDisableAutoInstrumentation","getCurrentHub","clientOptions","_optionalChain","_","_2","getClient","_3","_4","getOptions","_5","instrumenter","_6"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry-internal/src/node/integrations/utils/node-utils.ts"],"sourcesContent":["import type { Hub } from '@sentry/types';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nexport function shouldDisableAutoInstrumentation(getCurrentHub: () => Hub): boolean {\n  const clientOptions = getCurrentHub().getClient()?.getOptions();\n  const instrumenter = clientOptions?.instrumenter || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n"],"mappings":";;AAEA;;;;;;AAMA,SAAAA,iCAAAC,aAAA;EACA,MAAAC,aAAA,GAAAC,cAAA,EAAAF,aAAA,UAAAG,CAAA,IAAAA,CAAA,cAAAC,EAAA,IAAAA,EAAA,CAAAC,SAAA,UAAAC,EAAA,IAAAA,EAAA,sBAAAC,EAAA,IAAAA,EAAA,CAAAC,UAAA,UAAAC,EAAA,IAAAA,EAAA;EACA,MAAAC,YAAA,GAAAR,cAAA,EAAAD,aAAA,oBAAAU,EAAA,IAAAA,EAAA,CAAAD,YAAA;EAEA,OAAAA,YAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
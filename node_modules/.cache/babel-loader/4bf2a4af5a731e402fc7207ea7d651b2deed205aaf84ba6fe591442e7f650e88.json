{"ast":null,"code":"import { WINDOW } from '../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate'\n  };\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max(timing[key] - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry;\n};\nconst getNavigationEntry = () => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return WINDOW.performance && (performance.getEntriesByType && performance.getEntriesByType('navigation')[0] || getNavigationEntryFromPerformanceTiming());\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\nexport { getNavigationEntry };","map":{"version":3,"names":["getNavigationEntryFromPerformanceTiming","timing","WINDOW","performance","type","navigation","navigationEntry","entryType","startTime","key","Math","max","navigationStart","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType"],"sources":["/Users/chirag_vaid/Desktop/Pesto/team-anil-rao-p8-team-anil-rao/node_modules/@sentry-internal/src/browser/web-vitals/lib/getNavigationEntry.ts"],"sourcesContent":["/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAAA,uCAAA,GAAAA,CAAA;EACA;EACA,MAAAC,MAAA,GAAAC,MAAA,CAAAC,WAAA,CAAAF,MAAA;EACA;EACA,MAAAG,IAAA,GAAAF,MAAA,CAAAC,WAAA,CAAAE,UAAA,CAAAD,IAAA;EAEA,MAAAE,eAAA;IACAC,SAAA;IACAC,SAAA;IACAJ,IAAA,EAAAA,IAAA,yBAAAA,IAAA;EACA;EAEA,WAAAK,GAAA,IAAAR,MAAA;IACA,IAAAQ,GAAA,0BAAAA,GAAA;MACA;MACAH,eAAA,CAAAG,GAAA,IAAAC,IAAA,CAAAC,GAAA,CAAAV,MAAA,CAAAQ,GAAA,IAAAR,MAAA,CAAAW,eAAA;IACA;EACA;EACA,OAAAN,eAAA;AACA;AAEA,MAAAO,kBAAA,GAAAA,CAAA;EACA,IAAAX,MAAA,CAAAY,uBAAA;IACA,OACAZ,MAAA,CAAAC,WAAA,KACAA,WAAA,CAAAY,gBAAA,IAAAZ,WAAA,CAAAY,gBAAA,qBACAf,uCAAA;EAEA;IACA,OAAAE,MAAA,CAAAC,WAAA,IAAAA,WAAA,CAAAY,gBAAA,IAAAZ,WAAA,CAAAY,gBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}